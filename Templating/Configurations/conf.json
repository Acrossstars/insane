{
  "domain": "Mishkas",

  "entities": [
    {
      "className": "Mishka",
      "properties": [
        {
          "name": "Name",
          "type": "string"
        },
        {
          "name": "Description",
          "type": "string"
        },
        {
          "name": "AnyProperty",
          "type": "int"
        }
      ]
    }
  ],
  "events": [
    {
      "className": "MishkaAdded",
      "properties": [
        {
          "name": "Id",
          "type": "string"
        },
        {
          "name": "Title",
          "type": "string"
        }
      ]
    },
    {
      "className": "MishkaUpdated",
      "properties": [
        {
          "name": "Id",
          "type": "string"
        },
        {
          "name": "Title",
          "type": "string"
        }
      ]
    },
    {
      "className": "MishkaDeleted",
      "properties": [
        {
          "name": "Id",
          "type": "string"
        }
      ]
    }
  ],
  "repositories": [
    {
      "className": "MishkaRepository",
      "aggregateEntity": "Mishka",
      "dbContext": "ApplicationDbContext",
      "methods": [
        {
          "type": "",
          "name": "AddMishkaNotBaseMethod",
          "parameters": [
            {
              "type": "Mishka",
              "name": "mishka"
            }
          ],
          "logic": ""
        },
        {
          "type": "",
          "name": "EditMishkaNotBaseMethod",
          "parameters": [
            {
              "type": "Mishka",
              "name": "Mishka"
            }
          ],
          "logic": ""
        },
        {
          "type": "",
          "name": "DeleteMishkaNotBaseMethod",
          "parameters": [
            {
              "type": "string",
              "name": "id"
            }
          ],
          "logic": ""
        },
        {
          "type": "List<Mishka>",
          "name": "GetAllMishka",
          "parameters": [
            {}
          ],
          "logic": ""
        },
        {
          "type": "Mishka",
          "name": "FindMishkaByIdNotBaseMethod",
          "parameters": [
            {
              "type": "string",
              "name": "id"
            }
          ],
          "logic": ""
        }
      ]
    }
  ],
  "useCases": [
    {
      "DomainEntityName": "Mishka",
      "HasRestEndpoint": true,
      "HttpMethodType": 0,
      "RequestType": 1,
      "name": "GetKekMishkaDataById",
      "UseCaseContext": {
        "OperableProperties": [
          {
            "name": "CollectionId",
            "type": "string"
          }
        ]
      },
      "UseCaseSteps": [
        "Validate the input id",
        "Retrieve the digital collection data from the repository",
        "Check if data is not null",
        "Map the data to a DTO (if necessary)",
        "Return the DTO"
      ]
    },
    {
      "DomainEntityName": "Mishka",
      "HasRestEndpoint": true,
      "HttpMethodType": 1,
      "RequestType": 0,
      "name": "CreateKekMishkaDataById",
      "UseCaseContext": {
        "OperableProperties": [
          {
            "name": "CollectionId",
            "type": "string"
          }
        ]
      },
      "UseCaseSteps": [
        "Validate the input id",
        "Retrieve the digital collection data from the repository",
        "Check if data is not null",
        "Map the data to a DTO (if necessary)",
        "Return the DTO"
      ]
    },
    {
      "DomainEntityName": "Mishka",
      "HasRestEndpoint": true,
      "HttpMethodType": 2,
      "RequestType": 0,
      "name": "UpdateKekMishkaDataById",
      "UseCaseContext": {
        "OperableProperties": [
          {
            "name": "CollectionId",
            "type": "string"
          }
        ]
      },
      "UseCaseSteps": [
        "Validate the input id",
        "Retrieve the digital collection data from the repository",
        "Check if data is not null",
        "Map the data to a DTO (if necessary)",
        "Return the DTO"
      ]
    },
    {
      "DomainEntityName": "Mishka",
      "HasRestEndpoint": true,
      "HttpMethodType": 3,
      "RequestType": 0,
      "name": "DeleteKekMishkaDataById",
      "UseCaseContext": {
        "OperableProperties": [
          {
            "name": "CollectionId",
            "type": "string"
          }
        ]
      },
      "UseCaseSteps": [
        "Validate the input id",
        "Retrieve the digital collection data from the repository",
        "Check if data is not null",
        "Map the data to a DTO (if necessary)",
        "Return the DTO"
      ]
    }
    //{
    //  "DomainEntityName": "Mishka",
    //  "HasRestEndpoint": true,
    //  "HttpMethodType": 2,
    //  "RequestType": 0,
    //  "name": "UpdateMishka",
    //  "UseCaseContext": {
    //    "OperableProperties": [
    //      {
    //        "name": "CollectionId",
    //        "type": "string"
    //      },
    //      {
    //        "name": "CreatorId",
    //        "type": "string"
    //      },
    //      {
    //        "name": "TokenName",
    //        "type": "string"
    //      },
    //      {
    //        "name": "TokenSymbol",
    //        "type": "string"
    //      },
    //      {
    //        "name": "ContractOwner",
    //        "type": "string"
    //      },
    //      {
    //        "name": "ContractAddress",
    //        "type": "string"
    //      },
    //      {
    //        "name": "TxHash",
    //        "type": "string"
    //      },
    //      {
    //        "name": "BlockHash",
    //        "type": "string"
    //      },
    //      {
    //        "name": "ContractStandart",
    //        "type": "string"
    //      },
    //      {
    //        "name": "GasUsed",
    //        "type": "BigInteger"
    //      },
    //      {
    //        "name": "GasPrice",
    //        "type": "BigInteger"
    //      },
    //      {
    //        "name": "CreatedDate",
    //        "type": "DateTime"
    //      }
    //    ]
    //  },
    //  "UseCaseSteps": [
    //    "Find entity in db by id",
    //    "Update Entity",
    //    "Save to DataBase",
    //    "Trigger the EntityUpdated DomainEvent"
    //  ]
    //},
    //{
    //  "DomainEntityName": "Mishka",
    //  "HasRestEndpoint": true,
    //  "HttpMethodType": 3,
    //  "RequestType": 0,
    //  "name": "DeleteMishka",
    //  "UseCaseContext": {
    //    "OperableProperties": [
    //      {
    //        "Modificator": "public",
    //        "Type": "string",
    //        "Name": "Id",
    //        "Accessors": [ "get", "set" ]
    //      }
    //    ]
    //  },
    //  "UseCaseSteps": [
    //    "Find entity in db by id",
    //    "Delete Entity",
    //    "Save to DataBase",
    //    "Trigger the EntityDeleted DomainEvent"
    //  ]
    //},
    //{
    //  "DomainEntityName": "Mishka",
    //  "HasRestEndpoint": true,
    //  "HttpMethodType": 1,
    //  "RequestType": 0,
    //  "name": "CreateMishka",
    //  "UseCaseContext": {
    //    "OperableProperties": [
    //      {
    //        "name": "CollectionId",
    //        "type": "string"
    //      },
    //      {
    //        "name": "CreatorId",
    //        "type": "string"
    //      },
    //      {
    //        "name": "TokenName",
    //        "type": "string"
    //      },
    //      {
    //        "name": "TokenSymbol",
    //        "type": "string"
    //      },
    //      {
    //        "name": "ContractOwner",
    //        "type": "string"
    //      },
    //      {
    //        "name": "ContractAddress",
    //        "type": "string"
    //      },
    //      {
    //        "name": "TxHash",
    //        "type": "string"
    //      },
    //      {
    //        "name": "BlockHash",
    //        "type": "string"
    //      },
    //      {
    //        "name": "ContractStandart",
    //        "type": "string"
    //      },
    //      {
    //        "name": "GasUsed",
    //        "type": "BigInteger"
    //      },
    //      {
    //        "name": "GasPrice",
    //        "type": "BigInteger"
    //      },
    //      {
    //        "name": "CreatedDate",
    //        "type": "DateTime"
    //      }
    //    ]
    //  },
    //  "UseCaseSteps": [
    //    "Create new Mishka",
    //    "Save to database"
    //  ]
    //},
  ]
}
